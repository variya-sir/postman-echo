{
	"info": {
		"_postman_id": "84fb4d92-8e87-4653-b591-41a447394a05",
		"name": "C1: Using Variables",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "R1: GET Request",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//////// Sample Using Variable ////////",
							"",
							"// Overide variable values setting at C1",
							"console.log(\"Before set local variable, scope value at R1:\", pm.variables.get(\"scope\"));",
							"pm.variables.set(\"scope\", \"R1\");",
							"console.log(\"After set local variable, scope value at R1:\", pm.variables.get(\"scope\"));",
							"",
							"",
							"// Dynamic variables",
							"// https://learning.postman.com/docs/writing-scripts/script-references/variables-list/",
							"",
							"// return random value every times color is get",
							"pm.collectionVariables.set(\"color\",\"{{$randomColor}}\") ",
							"console.log(\"Color is: \", pm.variables.get(\"color\"))",
							"",
							"// initial random color for the first time only",
							"pm.collectionVariables.set(\"initcolor\",pm.variables.replaceIn('{{$randomColor}}'))",
							"console.log(\"Initial Color is: \", pm.variables.get(\"initcolor\"))",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://www.postman-echo.com/get?color={{color}}&initcolor={{initcolor}}&uuid={{$guid}}",
					"protocol": "https",
					"host": [
						"www",
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "color",
							"value": "{{color}}"
						},
						{
							"key": "initcolor",
							"value": "{{initcolor}}"
						},
						{
							"key": "uuid",
							"value": "{{$guid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "R2: GET Request",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "https://www.postman-echo.com/get?color={{color}}&initcolor={{initcolor}}&uuid={{$guid}}",
					"protocol": "https",
					"host": [
						"www",
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "color",
							"value": "{{color}}"
						},
						{
							"key": "initcolor",
							"value": "{{initcolor}}"
						},
						{
							"key": "uuid",
							"value": "{{$guid}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"//////// Sample Using Variable ////////",
					"",
					"// Execution Order: global -> collection -> environment -> data -> local",
					"// Note: You can't set a data variable inside Postman because it's pulled from the data file",
					"",
					"// Set variables",
					"pm.globals.set(\"scope\", \"globals\");",
					"pm.collectionVariables.set(\"scope\", \"collection\");",
					"pm.environment.set(\"scope\", \"environment\");",
					"",
					"// Get variables",
					"console.log(\"Global Scope value:\", pm.globals.get(\"scope\"))",
					"console.log(\"Collection Scope value\", pm.collectionVariables.get(\"scope\"))",
					"console.log(\"Environment Scope value\", pm.environment.get(\"scope\"))",
					"//access a variable at any scope including local",
					"console.log(\"Scope value at C1:\", pm.variables.get(\"scope\"));",
					"",
					"// Unset Variables",
					"pm.globals.unset(\"scope\", \"globals\");",
					"pm.collectionVariables.unset(\"scope\", \"collection\");",
					"pm.environment.unset(\"scope\", \"environment\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "color",
			"value": ""
		},
		{
			"key": "initcolor",
			"value": ""
		}
	]
}